`timescale 1ns / 1ps

module voter5(
    input logic [4:0] vote,
    output  logic pass
    ); 
    
    reg [7:0] out_3_8_00 = 0;
    reg [7:0] out_3_8_01 = 0;
    reg [7:0] out_3_8_10 = 0;
    reg [7:0] out_3_8_11 = 0;
    reg [3:0] out_2_4 = 0;
    
    always_comb begin
            if(1) 
                    case(vote[4:3])
                        2'b11: out_2_4= 4'b0111;
                        2'b10:out_2_4= 4'b1011;
                        2'b01:out_2_4= 4'b1101;
                        2'b00:out_2_4= 4'b1110;
                        default: out_2_4= 4'b1111;                    
                    endcase
             else
                  out_2_4= 4'b1111;
                  
            if(1'b1 && ~out_2_4[0] && ~out_2_4[0]) 
                case(vote[2:0])
                    7:out_3_8_00= 8'b01111111;
                    6:out_3_8_00= 8'b10111111;
                    5:out_3_8_00= 8'b11011111;
                    4:out_3_8_00= 8'b11101111;
                    3:out_3_8_00= 8'b11110111;
                    2:out_3_8_00= 8'b11111011;
                    1:out_3_8_00= 8'b11111101;
                    0:out_3_8_00= 8'b11111110;
                    default: out_3_8_00= 8'b11111111;                    
                endcase
            else
                out_3_8_00= 8'b11111111;
                
           if(1'b1 && ~out_2_4[1] && ~out_2_4[1]) 
                case(vote[2:0])
                    7:out_3_8_01= 8'b01111111;
                    6:out_3_8_01= 8'b10111111;
                    5:out_3_8_01= 8'b11011111;
                    4:out_3_8_01= 8'b11101111;
                    3:out_3_8_01= 8'b11110111;
                    2:out_3_8_01= 8'b11111011;
                    1:out_3_8_01= 8'b11111101;
                    0:out_3_8_01= 8'b11111110;
                    default: out_3_8_01= 8'b11111111;                    
                endcase
            else
                out_3_8_01= 8'b11111111;
                
            if(1'b1&& ~out_2_4[2] && ~out_2_4[2]) 
                case(vote[2:0])
                    7:out_3_8_10= 8'b01111111;
                    6:out_3_8_10= 8'b10111111;
                    5:out_3_8_10= 8'b11011111;
                    4:out_3_8_10= 8'b11101111;
                    3:out_3_8_10= 8'b11110111;
                    2:out_3_8_10= 8'b11111011;
                    1:out_3_8_10= 8'b11111101;
                    0:out_3_8_10= 8'b11111110;
                    default: out_3_8_10= 8'b11111111;                    
                endcase
            else
                out_3_8_10= 8'b11111111;
                
            if(1'b1&& ~out_2_4[3] && ~out_2_4[3]) 
                case(vote[2:0])
                    7:out_3_8_11= 8'b01111111;
                    6:out_3_8_11= 8'b10111111;
                    5:out_3_8_11= 8'b11011111;
                    4:out_3_8_11= 8'b11101111;
                    3:out_3_8_11= 8'b11110111;
                    2:out_3_8_11= 8'b11111011;
                    1:out_3_8_11= 8'b11111101;
                    0:out_3_8_11= 8'b11111110;
                    default: out_3_8_11= 8'b11111111;                    
                endcase
            else
                out_3_8_11= 8'b11111111;

     pass = (~out_3_8_00[7]
                |~out_3_8_01[3]|~out_3_8_01[5]|~out_3_8_01[6]|~out_3_8_01[7]
                |~out_3_8_10[3]|~out_3_8_10[5]|~out_3_8_10[6]|~out_3_8_10[7]
                |~out_3_8_11[1]|~out_3_8_11[2]|~out_3_8_11[3]|~out_3_8_11[4]|~out_3_8_11[5]|~out_3_8_11[6]|~out_3_8_11[7]);  
    end
              
endmodule